# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import speaker_pb2 as speaker__pb2


class SpeakerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Speak = channel.unary_unary(
                '/Speaker/Speak',
                request_serializer=speaker__pb2.InputData.SerializeToString,
                response_deserializer=speaker__pb2.OutputData.FromString,
                )


class SpeakerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Speak(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpeakerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Speak': grpc.unary_unary_rpc_method_handler(
                    servicer.Speak,
                    request_deserializer=speaker__pb2.InputData.FromString,
                    response_serializer=speaker__pb2.OutputData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Speaker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Speaker(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Speak(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Speaker/Speak',
            speaker__pb2.InputData.SerializeToString,
            speaker__pb2.OutputData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
